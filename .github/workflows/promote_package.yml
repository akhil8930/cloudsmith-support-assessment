name: Promote Python Package

on:
  workflow_dispatch:
    inputs:
      package_version:
        description: 'Package version to promote (e.g., 0.0.1)'
        required: true
        type: string

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write       # Necessary for GitHub to generate an OIDC token

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Get OIDC token and Cloudsmith API key
      - name: Obtain Cloudsmith API Token via OIDC
        run: |
          echo "Fetching Cloudsmith OIDC Token..."

          # Fetch GitHub OIDC token (JWT)
          oidc_value=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq -r '.value')

          # Exchange OIDC token for Cloudsmith access token
          cloudsmith_token=$(curl -s -X POST -H "Content-Type: application/json" \
            -d "{\"oidc_token\":\"$oidc_value\", \"service_slug\":\"${{ env.CLOUDSMITH_SERVICE_SLUG }}\"}" \
            "https://api.cloudsmith.io/openid/${{ env.CLOUDSMITH_NAMESPACE }}/" | jq -r '.token')

          if [ -z "$cloudsmith_token" ] || [ "$cloudsmith_token" = "null" ]; then
            echo "Failed to fetch Cloudsmith token!"
            exit 1
          fi

          echo "CLOUDSMITH_API_KEY=$cloudsmith_token" >> $GITHUB_ENV

      # Step 2: Query for the package and promote
      - name: Get package identifier and promote
        env:
          CLOUDSMITH_API_KEY: $CLOUDSMITH_API_KEY
        run: |
          echo "Using Cloudsmith API Key for promoting package..."

          # Query for the package
          PACKAGE_QUERY="filename:${PACKAGE_NAME}-${{ github.event.inputs.package_version }}.tar.gz"
          echo "Searching for package with query: $PACKAGE_QUERY"

          PACKAGE_DATA=$(curl -s -H "Authorization: Bearer $CLOUDSMITH_API_KEY" \
            "https://api.cloudsmith.io/v1/packages/${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/?query=$PACKAGE_QUERY" \
            -H 'accept: application/json')

          echo "Debugging API Response:"
          echo "$PACKAGE_DATA"

          # Verify the structure of the response
          if [[ "$PACKAGE_DATA" == *"error"* || -z "$PACKAGE_DATA" ]]; then
            echo "Failed to find matching package. Response: $PACKAGE_DATA"
            exit 1
          fi

          # Extract identifier using jq
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm' 2>/dev/null)
          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "Failed to extract `identifier_perm` from API response!"
            echo "API Response: $PACKAGE_DATA"
            exit 1
          fi

          echo "Found package identifier: $IDENTIFIER"

          # Promote package using the identifier
          curl -X POST -H "Authorization: Bearer $CLOUDSMITH_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"dest_repo\": \"${{ env.CLOUDSMITH_PRODUCTION_REPO }}\"}" \
            "https://api.cloudsmith.io/v1/packages/${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER/promote/"

          echo "Package promotion completed successfully."