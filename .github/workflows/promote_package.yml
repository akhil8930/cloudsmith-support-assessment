name: Promote Python Package

on:
  repository_dispatch:
    types:
      - package_synchronized  

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Install Cloudsmith CLI with OIDC
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      # Step 2: Tag the package with 'ready-for-production'
      - name: Tag Package as Ready for Production
        run: |
          PACKAGE_IDENTIFIER="${{ github.event.client_payload.package_identifier }}"
          
          if [ -z "$PACKAGE_IDENTIFIER" ]; then
            echo "Error: PACKAGE_IDENTIFIER is empty. Ensure the webhook payload includes 'package_identifier'."
            exit 1
          fi

          FULL_PACKAGE_SLUG="${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$PACKAGE_IDENTIFIER"
          echo "Tagging package $FULL_PACKAGE_SLUG with 'ready-for-production'..."
          cloudsmith tag add $FULL_PACKAGE_SLUG ready-for-production

      # Step 3: Query for all packages tagged with 'ready-for-production' and promote them
      - name: Query and Promote Packages
        run: |
          # Query for all packages tagged with 'ready-for-production'
          echo "Querying for packages tagged with 'ready-for-production'..."
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "tag:ready-for-production" -F json)

          # Extract all package identifiers using jq
          IDENTIFIERS=$(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm')

          if [ -z "$IDENTIFIERS" ]; then
            echo "No packages found with the 'ready-for-production' tag."
            exit 0
          fi

          echo "Found packages to promote: $IDENTIFIERS"

          # Promote each package to the production repository
          for IDENTIFIER in $IDENTIFIERS; do
            echo "Promoting package $IDENTIFIER to production..."
            cloudsmith mv --yes \
              ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
              ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
          done
        shell: bash
