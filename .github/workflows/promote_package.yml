name: Promote Python Package

on:
  repository_dispatch:      # Triggered by the GitHub repository_dispatch event from Cloudsmith webhook
    types:
      - package_synchronized

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_TAG: 'ready-for-production' # Tag required for production promotion

permissions:
  id-token: write       # Necessary for GitHub to generate an OIDC token

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Install Cloudsmith CLI with OIDC
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      # Step 2: Tag the package with ready-for-production
      - name: Tag the Synchronised Package
        run: |
          # Extract the package identifier passed in the webhook payload
          IDENTIFIER=${{ github.event.client_payload.package_identifier }}
          echo "Received Webhook Identifier: $IDENTIFIER"
          
          # Add the ready-for-production tag to the package in the staging repository
          cloudsmith tag add "${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER" "${{ env.PACKAGE_TAG }}"
          echo "Package successfully tagged with '${{ env.PACKAGE_TAG }}'."

      # Step 3: Query for all ready-for-production packages and Promote
      - name: Query Packages and Promote
        run: |
          # Query for all packages tagged with ready-for-production
          PACKAGE_QUERY="tags:${{ env.PACKAGE_TAG }}"
          echo "Searching for all packages with tag: $PACKAGE_QUERY"

          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)

          # Check the API response
          if [ -z "$PACKAGE_DATA" ] || [[ "$PACKAGE_DATA" == *"error"* ]]; then
            echo "No packages found with tag '${{ env.PACKAGE_TAG }}'. Exiting."
            exit 0
          fi

          # Extract all identifiers for packages tagged as ready-for-production
          IDENTIFIERS=$(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm')
          echo "Found the following package identifiers tagged with '${{ env.PACKAGE_TAG }}': $IDENTIFIERS"

          # Promote each package from staging to production
          for ID in $IDENTIFIERS; do
            echo "Promoting package: $ID"
            cloudsmith mv --yes \
              ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$ID \
              ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
          done
          echo "All tagged packages successfully promoted to ${CLOUDSMITH_PRODUCTION_REPO}."